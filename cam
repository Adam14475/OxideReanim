for i,v in game:GetDescendants() do
	if v:IsA("ProximityPrompt") then
		v:Destroy()
	end
end
game.DescendantAdded:Connect(function(v)
	if v:IsA("ProximityPrompt") then
		task.wait(.01)
		v:Destroy()
	end
end)
local gg = workspace.Parent
local Player = game:GetService("Players").LocalPlayer
local osclock=os.clock
local tspawn=task.spawn
local twait=task.wait
local schar=string.char
local ssub=string.sub
local sfind=string.find
local supper=string.upper
local mrandom=math.random
local sin=math.sin
local cos=math.cos
local abs=math.abs
local rad=math.rad
local min=math.min
local clamp=math.clamp
local tinsert=table.insert
local tclear=table.clear
local tclone=table.clone
local tfind=table.find
local tunpack=table.unpack

--the script doesnt have to read global varaibles every time to get them
--why not have them saved in local varaibles for faster access times
local next=next
local pcall=pcall
local xpcall=xpcall
local type=type
local typeof=typeof
local gg=gg

local i=Instance.new 
local v2=Vector2.new 
local v3=Vector3.new
local c3=Color3.new 
local cf=CFrame.new
local cfl=CFrame.lookAt
local angles=CFrame.Angles
local u2=UDim2.new 
local e=Enum 
local rp=RaycastParams.new 
local cs=ColorSequence.new 
local csk=ColorSequenceKeypoint.new 

local sine=osclock()
local deltaTime=0
local v3_0=v3(0,0,0)
local v3_101=v3(1,0,1)
local v3_010=v3(0,1,0)
local v3_001=v3(0,0,1)
local cf_0=cf(0,0,0)
local v3_xz=v3_101*10
local v3_xzL=v3_101*250.1
local v3_net=v3_010*25.01

--not "local function rs" to not assign debug names
local rs=function(l) 
	l=l or mrandom(8,15) 
	local s="" 
	for i=1,l do 
		if mrandom(1,2)==1 then 
			s=s..schar(mrandom(65,90)) 
		else 
			s=s..schar(mrandom(97,122)) 
		end 
	end 
	return s 
end

--it runs even faster if u call __index and __newindex of metatables of userdata directly
local getMetamethodFromErrorStack=function(userdata,f,test)
	local ret=nil
	xpcall(f,function()
		ret=debug.info(2,"f")
	end,userdata,nil,0)
	if (type(ret)~="function")  then
		return f
	end
	return ret
end
local insSet=function(i,p,v)
	i[p] = v
end
local insGet=function(i,p)
	return i[p]
end
local cfGet=getMetamethodFromErrorStack(cf_0,function(a,b) return a[b] end,function(f) return f(cf(1,2,3),"Position")==v3(1,2,3) end)
local cfMul=getMetamethodFromErrorStack(cf_0,function(a,b) return a*b end,function(f) return angles(1,2,3)*angles(1,2,3)==f(angles(1,2,3),angles(1,2,3)) end)
local cfAdd=getMetamethodFromErrorStack(cf_0,function(a,b) return a+b end,function(f) return cf(1,2,3)+v3(1,2,3)==f(cf(1,2,3),v3(1,2,3)) end)
local v3Get=getMetamethodFromErrorStack(v3_0,function(a,b) return a[b] end,function(f) return v3(1,2,3).Unit==f(v3(1,2,3),"Unit") end)
--multiplying and adding vector3 is faster if you use the * and + operators

--no need to index instances every time to call their functions
local Clone=insGet(gg,"Clone")
local ClearAllChildren=insGet(gg,"ClearAllChildren")
local Destroy=insGet(gg,"Destroy")
local IsA=insGet(gg,"IsA")
local FindFirstChildOfClass=insGet(gg,"FindFirstChildOfClass")
local FindFirstChildWhichIsA=insGet(gg,"FindFirstChildWhichIsA")
local GetChildren=insGet(gg,"GetChildren")
local GetDescendants=insGet(gg,"GetDescendants")
local IsDescendantOf=insGet(gg,"IsDescendantOf")
local GetPropertyChangedSignal=insGet(gg,"GetPropertyChangedSignal")

--findfirstchildofclass faster than getservice
local plrs=FindFirstChildOfClass(gg,"Players")
local rus=FindFirstChildOfClass(gg,"RunService")
local ws=FindFirstChildOfClass(gg,"Workspace")
local uis=FindFirstChildOfClass(gg,"UserInputService")
local gs=FindFirstChildOfClass(gg,"GuiService")
local sg=FindFirstChildOfClass(gg,"StarterGui")
local lp=insGet(plrs,"LocalPlayer")
local pg=FindFirstChildOfClass(lp,"PlayerGui")
local mouse=insGet(lp,"GetMouse")(lp)
local stepped=insGet(rus,"Stepped")
local heartbeat=insGet(rus,"Heartbeat")
local renderstepped=insGet(rus,"RenderStepped")

local GetPlayers=insGet(plrs,"GetPlayers")
local SetCoreGuiEnabled=insGet(sg,"SetCoreGuiEnabled")
local GetCoreGuiEnabled=insGet(sg,"GetCoreGuiEnabled")
local Raycast=insGet(ws,"Raycast")
local Connect=heartbeat.Connect
local Disconnect=Connect(GetPropertyChangedSignal(gg,"CreatorId"),type).Disconnect
local Wait=heartbeat.Wait
local GetMouseLocation=insGet(uis,"GetMouseLocation")
local GetFocusedTextBox=insGet(uis,"GetFocusedTextBox")
local GetMouseDelta=insGet(uis,"GetMouseDelta")
local IsMouseButtonPressed=insGet(uis,"IsMouseButtonPressed")
local IsKeyDown=insGet(uis,"IsKeyDown")

local Inverse=cfGet(cf_0,"Inverse")
local Lerp=cfGet(cf_0,"Lerp")


local cam=nil
--theres a way to have ws.currentcamera nil on heartbeat and still have the gg run normally
local refcam=function()
	local newcam=insGet(ws,"CurrentCamera")
	while not newcam do
		Wait(GetPropertyChangedSignal(ws,"CurrentCamera"))
		newcam=insGet(ws,"CurrentCamera")
	end
	cam=newcam
end
refcam()
local camcf=insGet(cam,"CFrame")
local enumCamS=e.CameraType.Scriptable
local camt=insGet(cam,"CameraType")
local camcon0=nil
local camcon1=nil
local camcon2=nil
local onnewcamera=function()
	if _G.Stopped == false then
		print(_G.Stopped)
		refcam()
		if camcon0 then 
			Disconnect(camcon0)
			Disconnect(camcon1)
			camcon0=nil
		end
		if not c then 
			if insGet(cam,"CameraType")==enumCamS then
				insSet(cam,"CameraType",camt)
				return Disconnect(camcon2)
			end
		end
		camcon0=Connect(GetPropertyChangedSignal(cam,"CFrame"),function()
			if insGet(cam,"CFrame")~=camcf then
				insSet(cam,"CFrame",camcf)
			end
		end)
		camcon1=Connect(GetPropertyChangedSignal(cam,"CameraType"),function()
			if insGet(cam,"CameraType")~=enumCamS then
				insSet(cam,"CameraType",enumCamS)
			end
		end)
		if insGet(cam,"CameraType")~=enumCamS then
			insSet(cam,"CameraType",enumCamS)
		end
		if insGet(cam,"CFrame")~=camcf then
			if _G.Stopped == false then
				if _G.Stopped == false then
					if _G.Stopped == false then
						insSet(cam,"CFrame",camcf)
					end
				end 
			end
		end
	end
end
camcon2=ws:GetPropertyChangedSignal("CurrentCamera"):Connect(onnewcamera)
onnewcamera()

local velYdelta=insGet(ws,"Gravity")*0.025
Connect(GetPropertyChangedSignal(ws,"Gravity"),function()
	velYdelta=insGet(ws,"Gravity")*0.025
end)

local fpdh=insGet(ws,"FallenPartsDestroyHeight")
novoid=novoid and (fpdh+1)
local Yvel=0
local cfr=insGet(,workspace:FindFirstChild("<["..Player.Name.."]>")"CFrame")
local pos=cfGet(cfr,"Position")
cfr=cfl(pos,pos+cfGet(cfr,"LookVector")*v3_101)
local primarypart=nil
local shiftlock=false
local firstperson=false
local xzvel=v3_0
local v3_0150=v3_010*1.5
local camcfLV=cfGet(camcf,"LookVector")
local camrot=cfl(v3_0,camcfLV)
local camcfRV=cfGet(camrot,"RightVector")
local enumMB2=e.UserInputType.MouseButton2
local enumMLCP=e.MouseBehavior.LockCurrentPosition
local enumMLC= e.MouseBehavior.LockCenter 
local enumMD=e.MouseBehavior.Default
local enumMW=e.UserInputType.MouseWheel
local enumMM=e.UserInputType.MouseMovement
local mradN05=rad(-0.5)
local cammag=-v3Get((cfGet(camcf,"Position")-(pos+v3_0150)),"Magnitude")

local thumbstickEndX=0
local thumbstickStartY=0

local thumbstickSizeMultiplier=0

local jumpStartX=0
local jumpStartY=0
local jumpEndX=0
local jumpEndY=0

local thumbstickInputObject=nil
local jumpInputObject=nil
local cameraRotateInputObject=nil
local cameraZoomInputObject=nil

local thumbstickTouchStart=v3_0
local cameraZoomInputMagnitude=0




Connect(insGet(uis,"TouchStarted"),function(inputObject)
	if insGet(gs,"MenuIsOpen") or GetFocusedTextBox(uis) then
		return
	end

	local touchPos=insGet(inputObject,"Position")
	local touchX=v3Get(touchPos,"X")
	local touchY=v3Get(touchPos,"Y")

	if (not thumbstickInputObject) and touchX<thumbstickEndX and touchY>thumbstickStartY then
	return
	elseif (not jumpInputObject) and touchY>jumpStartY and touchX>jumpStartX and touchX<jumpEndX and touchY<jumpEndY then
	return
	elseif not cameraRotateInputObject then
		cameraRotateInputObject=inputObject
	else
		cameraZoomInputObject=inputObject
		cameraZoomInputMagnitude=v3Get(insGet(cameraRotateInputObject,"Position")-insGet(cameraZoomInputObject,"Position"),"Magnitude")
	end
end)
Connect(insGet(uis,"TouchMoved"),function(inputObject)
	local touchPos=insGet(inputObject,"Position")
	local touchX=v3Get(touchPos,"X")
	local touchY=v3Get(touchPos,"Y")
	if inputObject==thumbstickInputObject then
		return
	elseif inputObject==jumpInputObject then
		return
	else
		if cameraZoomInputObject then
			local newMagnitude=v3Get(insGet(cameraRotateInputObject,"Position")-insGet(cameraZoomInputObject,"Position"),"Magnitude")					
			cammag=cammag+(newMagnitude-cameraZoomInputMagnitude)*0.04*(0.75-cammag/4)
			cameraZoomInputMagnitude=newMagnitude
			if cammag<0 then
				firstperson=false
			else
				cammag=0
				firstperson=true
			end
		elseif inputObject==cameraRotateInputObject then
			local rotation=GetMouseDelta(uis)*mradN05
			camcfLV=cfGet(cfMul(camrot,angles(rotation.Y,rotation.X,0)),"LookVector")
			camrot=cfl(v3_0,camcfLV)
			camcfRV=cfGet(camrot,"RightVector")
		end
	end
end)
Connect(insGet(uis,"TouchEnded"),function(inputObject)
	if inputObject==thumbstickInputObject then
	elseif inputObject==jumpInputObject then
	elseif inputObject==cameraRotateInputObject then
		cameraRotateInputObject=nil
		cameraZoomInputObject=nil
	elseif inputObject==cameraZoomInputObject then
		cameraZoomInputObject=nil
	end
end)

local refreshTouchRegions=function()
	local sX=insGet(mouse,"ViewSizeX")
	local sY=insGet(mouse,"ViewSizeY")
	local isSmallScreen=min(sX,sY)<=500

	sY=sY+insGet(gs,"TopbarInset").Height

	thumbstickEndX=sX*0.4
	thumbstickStartY=(sY+0)*0.333

	if isSmallScreen then
		thumbstickSizeMultiplier=35
		jumpStartX=sX-95
		jumpStartY=sY-90
		jumpEndX=jumpStartX+70
		jumpEndY=jumpStartY+70
	else
		thumbstickSizeMultiplier=60
		jumpStartX=sX-170
		jumpStartY=sY-210
		jumpEndX=jumpStartX+120
		jumpEndY=jumpStartY+120
	end
end
Connect(GetPropertyChangedSignal(mouse,"ViewSizeX"),refreshTouchRegions)
Connect(GetPropertyChangedSignal(mouse,"ViewSizeY"),refreshTouchRegions)
Connect(GetPropertyChangedSignal(gs,"TopbarInset"),refreshTouchRegions)
refreshTouchRegions()


local mouseCameraMove=false
local inp = Connect(insGet(uis,"InputChanged"),function(a,b)
	if b then return end
	local inputType=insGet(a,"UserInputType")
	if mouseCameraMove and inputType==enumMM then
		local rotation=GetMouseDelta(uis)*mradN05
		camcfLV=cfGet(cfMul(camrot,angles(rotation.Y,rotation.X,0)),"LookVector")
		camrot=cfl(v3_0,camcfLV)
		camcfRV=cfGet(camrot,"RightVector")
	elseif inputType==enumMW then
		cammag=cammag+v3Get(insGet(a,"Position"),"Z")*(0.75-cammag/4)
		if cammag<0 then
			firstperson=false
		else
			cammag=0
			firstperson=true
		end
	end
end)
sine=osclock()
local lastsine = 0
local mouseBehavior=nil

local lastMouseBehavior=insGet(uis,"MouseBehavior")
local beh = Connect(GetPropertyChangedSignal(uis,"MouseBehavior"),function()
	if mouseBehavior and (insGet(uis,"MouseBehavior")~=mouseBehavior) then
		insSet(uis,"MouseBehavior",mouseBehavior)
	end
end)
local KeyCode=e.KeyCode
local keyShift=KeyCode.LeftShift
Connect(insGet(uis,"InputBegan"),function(a)
	a=insGet(a,"KeyCode")
	if a==keyShift then
		shiftlock= not shiftlock
	end
end)
local function transparency()
	if firstperson then 
		for i,v in pairs(_G.OxideRealChar:GetDescendants()) do
			if v:IsA("BasePart") then 
				v.Transparency = 1    
			end
		end
	else 
		for i,v in pairs(_G.OxideRealChar:GetDescendants()) do
			if v:IsA("Accessory") then 
				v.Handle.Transparency = 0    
			end
		end
	end
end
local function rotate()
	if firstperson or shiftlock then 
		_G.OxideFakeChar.Humanoid.AutoRotate = false
	else 
		_G.OxideFakeChar.Humanoid.AutoRotate = true
	end
end
local camloop 

camloop = gg:GetService("RunService").Heartbeat:Connect(function()
	local cfr=insGet(,workspace:FindFirstChild("<["..Player.Name.."]>")"CFrame")
	local pos=cfGet(cfr,"Position")
	sine=osclock()
	delta=sine-lastsine
	lastsine=sine
	transparency()
	rotate()
	if shiftlock or firstperson then
		mouseBehavior=enumMLC
		mouseCameraMove=true
	elseif IsMouseButtonPressed(uis,enumMB2) then
		mouseBehavior=enumMLCP
		mouseCameraMove=true
	else
		mouseBehavior=enumMD
		mouseCameraMove=false
	end
	if lastMouseBehavior~=mouseBehavior then
		lastMouseBehavior=mouseBehavior
		insSet(uis,"MouseBehavior",mouseBehavior)
	end

	if firstperson then
		cfr=cfl(pos,pos+camcfLV*v3_101)
		_G.OxideFakeChar:WaitForChild("HumanoidRootPart").CFrame = cfr
		camcf=cfAdd(camrot,pos+v3_0150)
		insSet(cam,"CFrame",camcf)
	elseif shiftlock then	
		cfr=cfl(pos,pos+camcfLV*v3_101)
		camcf=cfAdd(camrot,pos+v3_0150+camcfRV*1.75+camcfLV*cammag)
		_G.OxideFakeChar:WaitForChild("HumanoidRootPart").CFrame = cfr
		insSet(cam,"CFrame",camcf)
	else 
		cfr=cfAdd(cfGet(cfr,"Rotation"),pos)
		camcf=cfAdd(camrot,pos+v3_0150+camcfLV*cammag)
		insSet(cam,"CFrame",camcf)
		noYvelTime=min(0+delta*0.3,1)
		xzvel=xzvel*(1-noYvelTime)
	end
	sine=osclock()
	lastsine=sine
end)
insSet(cam,"CameraType",e.CameraType.Scriptable)
gg.Players.LocalPlayer.CharacterAdded:Connect(function()
	if _G.Stopped == true then
		Disconnect(camcon1)
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		camloop:Disconnect()
		camcon2:Disconnect()
		Disconnect(camcon1)
		Disconnect(camcon0)
		Disconnect(camcon2)
		Disconnect(beh)
		Disconnect(inp)
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		insSet(uis,"MouseBehavior",enumMD)
	end
end)
